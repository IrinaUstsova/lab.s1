#include <iostream>
#include <cstdlib>
#include <vector>
#include <ctime>
#include <cmath>
#include <string>

using namespace std;

int main()
{
    //1
    int i;
    int arr_1[10]={};
    srand(time(nullptr));
    for (int i=0; i<10; i++)
    {
    arr_1=rand()%21-10;
    cout<<arr_1<<endl;
    }
    int a;
    a=(pow(arr_1[1],2))+(pow(arr_1[2],2))+(pow(arr_1[7],2));
    cout<<a<<endl;

    //2.1
    double *arr_2 = new double[10];
    int n;
    cout<<"Enter n>10"<<endl;
    cin>> n;
    {
        for  (int i=0; i<n; i++)
        {
            cout << arr_2<<endl;
        }
    }
    cout<<"Your array" << arr_2 <<endl;
    //2.2
    if (arr_2%2==0) cout<<arr_2/3<<endl;
    else cout<< arr_2<< endl;
    //2.3
    cout << "Enter k1 and k2" <<endl;
    int k, k1, k2;
    cin >> k1 >> k2;
    int arf = 0;
    for (int i = k1; i <= k2; ++i) 
    {
    arf += arr_2[i];
    k++;
    }
    cout << "The expression is equal to " << arf/k <<endl;
    delete arr_2;

    //3.1
    int m;
    cout<<"Enter m>5"<<endl;
    cin>> m;
    vector<int> vec;
    {
        for  (int i=0; i<m; i++)
        {
            int a;
            cin >> a;
            vec.push_back (Ð°)
        }
    }
    for (int i : vec) cout << i << " ";
    cout << endl;
    //3.2
    vec.push_back(21);
    for (int i : vec) cout << i << " ";
    cout << endl;
    //3.3
    vector<int> vec1;
    int s = 0;
    for (int i : vec1) s+= pow(i,2);
    cout << "Sum of squares" << s << endl;
    //3.4
    int n_3 = -1;
    for (int i = 0; i < vec1.size(); ++i) 
    {
        if (vec1[i] == 2)
        {
            n_3 = i;
            break;
        }
    }
    if (nomer != -1) vec1.erase(vec1.begin()+nomer);
    for (int i : vec1) cout << i << " ";
    cout << endl;

    //4.1
    cout << "Enter string" << endl;
    string str;
    getline(cin, str);
    cout << "Your line" << str << endl;
    //4.2
    int s=0;
    cout << str << "has" << str.lenght() << "characters" << endl;
    cout << (str.empty('e', 'y', 'u', 'i', 'o', 'a') ? s+=0 : s+=1) << endl;
    cout << "Percentage of consonant letters =" << s/ str.lenght() << endl;
    //4.3
    int l1, l2;
    cout << "Enter l1 and l2" << endl;
    cin >> l1 >> l2;
    cout << str.substr(l1, l2 - l1 + 1) << endl;
    //4.4
    string str_4 ("Can you can a can as a canner can can a can?") ;
    string can ;
    string word_2 ;
    getline(cin,str_4);
    cout << "Enter a replacement" << endl;
    cin >> word_2;
    int pos;
    pos = str_4.find(can);
    str_4.erase(pos,can.size());
    str_4.insert(pos,word_2);
    cout << str_4 << endl;
    
    return 0;
}
