#include <iostream>
#include <vector>

using namespace std;

int main()
{
    vector <int> vec;
    for (int i = 0; i <30; i ++))
        {

            vec.push_back (rand()%201-100)
        }

    for (int i = 0; i < 30; i++)
    {
        for (int j = 0; j < 29; j++)
        {
            if (vec[j] > vec[j + 1])
            {
                int b = vec[j];
                vec[j] = vec[j + 1];
                vec[j + 1] = b;
            }
        }
    }
    cout << "Sorted array: ";
    for (int i = 0; i < 30; i++)
    {
        cout << vec[i] << endl;
    }

    selectionSort(vector <int> vec);
    int a;
    {
    for i = 0 to n - 2
    for j = i + 1 to n - 1
    if a[i] > a[j]
    swap(a[i], a[j])
    }
    cout << "Sorted array: ";
    for (int i = 0; i < 30; i++)
    {
        cout << vec[i] << endl;
    }

    merge(int vec(30), int l, int h) 
    {
        int m;
        if (l < h) 
        {
            m = (l + h) / 2;
            merge(vec(30), l, m);
            merge(vec(30), m + 1, h);
            merge(vec(30), l, h, m);
        }
    }

    merge(int vec(30), int l, int h, int m) 
    {
        int i, j, k, c[30];
        i = l;
        k = i;
        j = m + 1;
        while ((i <= m) && (j <= h))
        {
            if (vec[i] < vec[j])
            {
                c[k] = vec[i];
                ++k; ++i;
            }
            else
                {
                c[k] = vec[j];
                ++k; ++j;
                }
        }
        while (i <= m) 
        {
            c[k] = vec[i];
            k++;
            i++;
        }
        while (j <= h)
        {
            c[k] = vec[j];
            k++;
            j++;
        }
        for (int s = l; s < k; ++s) vec[s] = c[s];
    }
    cout << "Sorted array: ";
    for (int s = 0; s < 30; s++)
    {
        cout << vec[s] << endl;
    }
    
    system(pause);
    return 0;
}
